{"version":3,"sources":["components/Form/Form.module.css","components/ContactsList/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/App/App.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/items/items-actions.js","redux/contacts/items/items-reducer.js","redux/contacts/filter/filter-actions.js","redux/contacts/filter/filter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Form/Form.js","components/Section/Section.js","redux/contacts/filter/filter-selector.js","redux/contacts/items/items-selector.js","components/ContactsList/ContactListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","itemsReducer","createReducer","initialItems","state","type","payload","some","name","includes","filter","contact","id","filterContacts","filterReducer","contactsReducer","combineReducers","items","store","configureStore","reducer","contacts","Form","onSubmit","useState","setName","number","setNumber","dispatch","useDispatch","handleInputChange","target","value","reset","e","data","preventDefault","uuidv4","itemsActions","className","s","form","inputContainer","subtitle","input","pattern","title","required","onChange","button","Section","children","section","container","getFilter","getFilterName","getItems","normalizedContact","toLowerCase","item","ContactListItem","onDelete","onClick","ContactsList","useSelector","list","map","Filter","label","filterActions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93bfdb86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1_l_t\",\"inputContainer\":\"Form_inputContainer__31hzw\",\"input\":\"Form_input__7b0GX\",\"subtitle\":\"Form_subtitle__2lfck\",\"button\":\"Form_button__H3Grq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListItem_list__30JaR\",\"item\":\"ContactListItem_item__3b0c0\",\"name\":\"ContactListItem_name__3UPlu\",\"button\":\"ContactListItem_button__14sWU\",\"data\":\"ContactListItem_data__1G1U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Ibq\",\"title\":\"Filter_title__1qEnJ\",\"input\":\"Filter_input__2Qxyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__MTuc3\",\"container\":\"Section_container__2Frc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2eymL\",\"subtitle\":\"App_subtitle__1fSnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__uzGLF\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/addContact');\r\nexport const deleteContact = createAction('contact/deleteContact');\r\n","import { addContact, deleteContact } from \"./items-actions\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport initialItems from \"../../../components/ContactsList/initialContacts.json\";\r\n\r\nexport const itemsReducer = createReducer(initialItems, {\r\n    [addContact]: (state, { type, payload }) => (!state.some(({ name }) => name.includes(payload.name))\r\n        ? [payload, ...state]\r\n        : state\r\n        // alert(`${payload.name} is already in contacts`)\r\n    ),\r\n    [deleteContact]: (state, { type, payload }) => (state.filter(contact => contact.id !== payload))\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('contact/filterContact');","import { filterContacts } from \"./filter-actions\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const filterReducer = createReducer( '', {\r\n    [filterContacts]: (state, { payload }) => payload\r\n});","import { combineReducers } from \"redux\";\r\nimport { itemsReducer } from \"./items/items-reducer\";\r\nimport { filterReducer } from \"./filter/filter-reducer\";\r\n\r\nexport const contactsReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer\r\n    }\r\n});\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as itemsActions from \"../../redux/contacts/items/items-actions\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  \r\n  const onSubmitContact = data => dispatch(itemsActions.addContact(data));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmitContact({ id: uuidv4(), name, number });\r\n    reset();\r\n  };\r\n\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.inputContainer}>\r\n        <span className={s.subtitle}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label className={s.inputContainer}>\r\n        <span className={s.subtitle}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\"></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children }) => (\r\n  <section className={s.section}>\r\n    <div className={s.container}>{children}</div>\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","export const getFilter = state => state.contacts.filter;","import { getFilter } from \"../filter/filter-selector\";\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getFilterName = state => {\r\n    const items = getItems(state)\r\n    const filter=getFilter(state)\r\n    const normalizedContact = filter.toLowerCase();\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedContact),\r\n    );\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ onDelete, name, number }) => {\r\n  \r\n  return (\r\n    <li className={s.item}>\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        onClick={onDelete}>\r\n      </button>\r\n      \r\n      <div className={s.data}>\r\n        <span className={s.name}>{name}:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterName } from \"../../redux/contacts/items/items-selector\";\r\nimport * as itemsActions from \"../../redux/contacts/items/items-actions\";\r\nimport ContactListItem from './ContactListItem';\r\nimport s from './ContactsList.module.css';\r\n \r\nconst ContactsList = () => {\r\n  const items = useSelector(getFilterName);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {items.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => dispatch(itemsActions.deleteContact(id))}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as filterActions from \"../../redux/contacts/filter/filter-actions\";\r\nimport { getFilter } from \"../../redux/contacts/filter/filter-selector\";\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n  <label className={s.label}>\r\n    <span className={s.title}>Find contacts by name:</span>\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={({ target: { value } }) => dispatch(filterActions.filterContacts(value))}\r\n    />\r\n  </label>\r\n);\r\n}\r\n\r\nexport default Filter;\r\n","// import { useState, useEffect } from 'react';\r\nimport Form from '../Form';\r\nimport Section from '../Section';\r\nimport ContactsList from '../ContactsList';\r\nimport Filter from '../Filter';\r\nimport s from './App.module.css';\r\n\r\nconst App = () => {\r\n  // const [contacts, setContacts] = useState(\r\n  //   () =>\r\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\r\n  // );\r\n  // const [filter, setFilter] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  // const onSubmitHandler = data => {\r\n  //   !contacts.some(({ name }) => name.includes(data.name))\r\n  //     ? setContacts(state => [data, ...contacts])\r\n  //     : alert(`${data.name} is already in contacts`);\r\n  // };\r\n\r\n  // const deleteContact = id => {\r\n  //   setContacts(state => state.filter(contact => contact.id !== id));\r\n  // };\r\n\r\n  // const onFilterName = ({ currentTarget: { value } }) => {\r\n  //   setFilter(value);\r\n  // };\r\n\r\n  // const getFilterName = () => {\r\n  //   const normalizedContact = filter.toLowerCase();\r\n  //   return items.filter(item =>\r\n  //     item.name.toLowerCase().includes(normalizedContact),\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <Form/>\r\n      </Section>\r\n      <Section>\r\n        <h2 className={s.subtitle}>Contacts</h2>\r\n        <Filter/>\r\n        <ContactsList/>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}