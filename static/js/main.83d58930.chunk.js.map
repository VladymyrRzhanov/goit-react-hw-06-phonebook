{"version":3,"sources":["components/Form/Form.module.css","components/ContactsList/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/App/App.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/items/items-actions.js","redux/contacts/items/items-reducer.js","redux/contacts/filter/filter-actions.js","redux/contacts/filter/filter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Form/Form.js","components/Section/Section.js","components/ContactsList/ContactListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","itemsReducer","createReducer","initialItems","state","type","payload","some","name","includes","filter","contact","id","filterContacts","filterReducer","contactsReducer","combineReducers","items","rootReducer","contacts","store","createStore","composeWithDevTools","Form","onSubmit","useState","setName","number","setNumber","handleInputChange","target","value","reset","e","preventDefault","uuidv4","className","s","form","inputContainer","subtitle","input","pattern","title","required","onChange","button","Section","children","section","container","ContactListItem","onDelete","item","onClick","data","ContactsList","list","map","Filter","onFilterName","label","App","useSelector","dispatch","useDispatch","itemsActions","filterActions","normalizedContact","toLowerCase","getFilterName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83d58930.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1_l_t\",\"inputContainer\":\"Form_inputContainer__31hzw\",\"input\":\"Form_input__7b0GX\",\"subtitle\":\"Form_subtitle__2lfck\",\"button\":\"Form_button__H3Grq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListItem_list__30JaR\",\"item\":\"ContactListItem_item__3b0c0\",\"name\":\"ContactListItem_name__3UPlu\",\"button\":\"ContactListItem_button__14sWU\",\"data\":\"ContactListItem_data__1G1U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Ibq\",\"title\":\"Filter_title__1qEnJ\",\"input\":\"Filter_input__2Qxyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__MTuc3\",\"container\":\"Section_container__2Frc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2eymL\",\"subtitle\":\"App_subtitle__1fSnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__uzGLF\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/addContact');\r\nexport const deleteContact = createAction('contact/deleteContact');\r\n","import { addContact, deleteContact } from \"./items-actions\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport initialItems from \"../../../components/ContactsList/initialContacts.json\";\r\n\r\nexport const itemsReducer = createReducer(initialItems, {\r\n    [addContact]: (state, { type, payload }) => (!state.some(({ name }) => name.includes(payload.name))\r\n        ? [payload, ...state]\r\n        : state\r\n        // alert(`${payload.name} is already in contacts`)\r\n    ),\r\n    [deleteContact]: (state, { type, payload }) => (state.filter(contact => contact.id !== payload))\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('contact/filterContact');","import { filterContacts } from \"./filter-actions\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const filterReducer = createReducer( '', {\r\n    [filterContacts]: (state, { payload }) => payload\r\n});","import { combineReducers } from \"redux\";\r\nimport { itemsReducer } from \"./items/items-reducer\";\r\nimport { filterReducer } from \"./filter/filter-reducer\";\r\n\r\nexport const contactsReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ id: uuidv4(), name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.inputContainer}>\r\n        <span className={s.subtitle}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label className={s.inputContainer}>\r\n        <span className={s.subtitle}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\"></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children }) => (\r\n  <section className={s.section}>\r\n    <div className={s.container}>{children}</div>\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ onDelete, name, number }) => (\r\n  <li className={s.item}>\r\n    <button className={s.button} type=\"button\" onClick={onDelete}></button>\r\n    <div className={s.data}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport s from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        name={name}\r\n        number={number}\r\n        onDelete={() => onDelete(id)}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onFilterName }) => (\r\n  <label className={s.label}>\r\n    <span className={s.title}>Find contacts by name:</span>\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={onFilterName}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onFilterName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","// import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from '../Form';\r\nimport Section from '../Section';\r\nimport ContactsList from '../ContactsList';\r\nimport Filter from '../Filter';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as itemsActions from \"../../redux/contacts/items/items-actions\";\r\nimport * as filterActions from \"../../redux/contacts/filter/filter-actions\";\r\nimport s from './App.module.css';\r\n\r\nconst App = () => {\r\n  const items = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  // const [contacts, setContacts] = useState(\r\n  //   () =>\r\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\r\n  // );\r\n  // const [filter, setFilter] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  // const onSubmitHandler = data => {\r\n  //   !contacts.some(({ name }) => name.includes(data.name))\r\n  //     ? setContacts(state => [data, ...contacts])\r\n  //     : alert(`${data.name} is already in contacts`);\r\n  // };\r\n\r\n  // const deleteContact = id => {\r\n  //   setContacts(state => state.filter(contact => contact.id !== id));\r\n  // };\r\n\r\n  // const onFilterName = ({ currentTarget: { value } }) => {\r\n  //   setFilter(value);\r\n  // };\r\n\r\n  const getFilterName = () => {\r\n    const normalizedContact = filter.toLowerCase();\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedContact),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <Form onSubmit={(data) => dispatch(itemsActions.addContact(data))} />\r\n      </Section>\r\n      <Section>\r\n        <h2 className={s.subtitle}>Contacts</h2>\r\n        <Filter\r\n          filter={filter}\r\n          onFilterName={({ target: { value } }) => dispatch(filterActions.filterContacts(value))}\r\n        />\r\n        <ContactsList\r\n          contacts={getFilterName()}\r\n          onDelete={(id) => dispatch(itemsActions.deleteContact(id))}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}